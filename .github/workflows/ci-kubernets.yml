name: Kubernetes CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  minikube:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
  
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Set up Kubernetes tools
        uses: azure/setup-kubectl@v1
        with:
          version: v1.21.0

      - name: Set up Minikube
        uses: manusa/actions-setup-minikube@v2.4.0
        with:
          minikube version: "v1.16.0"
          kubernetes version: "v1.19.2"

      - name: Delete any existing Minikube cluster
        run: minikube delete || true

      - name: Use Minikube Docker daemon
        run: eval $(minikube docker-env)

      - name: Start Minikube
        run: minikube start --driver=docker

      - name: Use Minikube Docker daemon
        run: eval $(minikube docker-env)

      - name: Create Kubernetes Postgres deployment
        working-directory: deploy/charts/postgres
        run: |
          kubectl apply -f postgres-deployment.yaml

      - name: Wait for deployment to be ready
        run: |
          kubectl rollout status deployment/postgres
          kubectl get pods

      - name: Create Kubernetes Redis deployment
        working-directory: deploy/charts/redis
        run: |
          kubectl apply -f redis-deployment.yaml

      - name: Wait for deployment to be ready
        run: |
          kubectl rollout status deployment/redis
          kubectl get pods

      - name: Create Kubernetes Kafka deployment
        working-directory: deploy/charts/kafka
        run: |
          kubectl apply -f zookeeper-deployment.yaml
          kubectl apply -f kafka-deployment.yaml

      - name: Wait for deployment to be ready
        run: |
          kubectl rollout status deployment/zookeeper
          kubectl rollout status deployment/kafka
          kubectl get pods

      - name: Create Kubernetes Control Center deployment
        working-directory: deploy/charts/control-center
        run: |
          kubectl apply -f control-center-deployment.yaml

      - name: Run tests
        run: |
          kubectl get all
